{"version":3,"sources":["../src/app.js"],"names":[],"mappings":";;;;;;;AACA;;AACA;;;;AACA;;;;;;wdAHA;;;AAIA;;AAEA;AACA;AACA;;AAEO,IAAM,oBAAM,mBAAZ;;AAEP;;AAEA,IAAI,GAAJ;AAAA,uDAAQ,iBAAO,GAAP,EAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,MAFF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAIJ,gBAAI,MAAJ,GAAa,YAAI,MAAJ,IAAc,GAA3B;AACA,gBAAI,GAAJ,CAAQ,IAAR,CAAa,OAAb,eAA2B,GAA3B;;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA;;AASA,IAAI,aAAa,QAAQ,cAAR,CAAjB;AACA,IAAI,sBAAsB,+BAAO,aAAK;AACpC,IAAE,GAAF,CAAM,WAAN,EAAmB,WAAW,GAA9B;AACA,IAAE,IAAF,CAAO,OAAP,EAAgB,WAAW,GAA3B;AACA,IAAE,GAAF,CAAM,WAAN,EAAmB,WAAW,MAA9B;AACA,IAAE,MAAF,CAAS,WAAT,EAAsB,WAAW,MAAjC;AACD,CALyB,CAA1B;;AAOA,IAAI,GAAJ,CAAQ,mBAAR;;AAEA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;AAkBA,IAAI,OAAO,QAAQ,GAAR,CAAY,IAAZ,IAAqB,QAAQ,IAAR,CAAa,CAAb,KAAmB,IAAnD;;AAEA;AACA,IAAI,CAAC,OAAO,MAAZ,EAAoB;AACnB,MAAI,MAAJ,CAAW,IAAX;AACA,UAAQ,GAAR,CAAY,6CAA6C,IAAzD;AACA","file":"app.js","sourcesContent":["//require(\"babel-core/register\");\r\nimport \"babel-polyfill\";\r\nimport Application from \"koa\";\r\nimport router from \"koa-simple-router\";\r\n//import routes from \"koa-route\";\r\n\r\n//var koa = require(\"koa\");\r\n//var app = module.exports = koa();\r\n//var routes = require(\"koa-route\");\r\n\r\nexport const app = new Application();\r\n\r\n// https://github.com/koajs/koa/wiki/Error-Handling\r\n\r\napp.use(async (ctx, next) => {\r\n  try {\r\n    await next();\r\n  } catch (err) {\r\n    ctx.status = err.status || 500;\r\n    ctx.app.emit('error', err, ctx);\r\n  }\r\n});\r\n\r\nlet userRoutes = require(\"./userRoutes\");\r\nlet userRouteMiddleware = router(_ => {\r\n  _.get('/user/:id', userRoutes.get);\r\n  _.post('/user', userRoutes.add);\r\n  _.put('/user/:id', userRoutes.update);\r\n  _.delete('/user/:id', userRoutes.remove);\r\n});\r\n\r\napp.use(userRouteMiddleware);\r\n\r\n/*\r\n// TODO: remove\r\n//app.use(routes.post(\"/user\", userRoutes.add));\r\napp.use(routes.get(\"/user/:id\", userRoutes.get));\r\n//app.use(routes.put(\"/user/:id\", userRoutes.update));\r\n//app.use(routes.del(\"/user/:id\", userRoutes.remove));\r\n*/\r\n\r\n/*\r\n// Old:\r\n// Get directories (from photoController.getPhotoPage)\r\n// Get filenames in a given directory (from photoController.getPhotoPage)\r\n// Get photo properties for a given directory (from photoController.getDirectoryData)\r\n// Get photo tags for a given directory+filename (from photoController.getPhotoData)\r\n// Create a file movement given a directory+filename and takenDateTime+camera (from photoController.moveFiles)\r\n\r\n// New:\r\n// Get all staging photo file paths (GET /staging-photo)\r\n// Get photo properties and tags for a given file path (GET /staging-photo/:id)\r\n// Create a file movement given a file path and takenDateTime+camera (PUT /photo-movement/:id)\r\nlet photoRoutes = require(\"./photoRoutes\");\r\napp.use(routes.get(\"/staging-photo\", photoRoutes.listStagingPhotos));\r\napp.use(routes.get(\"/staging-photo/:id\", photoRoutes.getStagingPhoto));\r\napp.use(routes.put(\"/photo-movement/:id\", photoRoutes.createPhotoMovement));\r\n*/\r\n\r\nvar port = process.env.PORT || (process.argv[2] || 3000);\r\n\r\n// http://www.marcusoft.net/2015/10/eaddrinuse-when-watching-tests-with-mocha-and-supertest.html\r\nif (!module.parent) {\r\n\tapp.listen(port);\r\n\tconsole.log(\"Application started. Listening on port: \" + port);\r\n}\r\n"]}